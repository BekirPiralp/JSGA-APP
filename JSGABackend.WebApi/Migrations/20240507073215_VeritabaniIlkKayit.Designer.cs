// <auto-generated />
using System;
using JSGABackend.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JSGABackend.WebApi.Migrations
{
    [DbContext(typeof(EntityFrameworkContextMsSql))]
    [Migration("20240507073215_VeritabaniIlkKayit")]
    partial class VeritabaniIlkKayit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikDonem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AkademikDonem");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikEgitim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AkademikEgitimTuruId")
                        .HasColumnType("int");

                    b.Property<int>("AkademikHaftaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SinifId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AkademikEgitimTuruId");

                    b.HasIndex("AkademikHaftaId");

                    b.HasIndex("SinifId");

                    b.ToTable("AkademikEgitim");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikEgitimTuru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AkademikEgitimTuru");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikHafta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AkademikDonemId")
                        .HasColumnType("int");

                    b.Property<int>("AkademikYilId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AkademikDonemId");

                    b.HasIndex("AkademikYilId");

                    b.ToTable("AkademikHafta");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikHaftaOzelGunleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AkademikHaftaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("OzelGunOlayId")
                        .HasColumnType("int");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AkademikHaftaId");

                    b.HasIndex("OzelGunOlayId");

                    b.ToTable("AkademikHaftaOzelGunleri");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikYil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AkademikYil");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.AkademikKisim.OzelGunOlay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OzelGunOlay");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.BirimKismi.Daire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kisaltma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Daire");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.BirimKismi.Sube", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DaireId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubeBilgiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DaireId");

                    b.HasIndex("SubeBilgiId");

                    b.ToTable("Sube");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.BirimKismi.SubeBilgi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kisaltma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SubeBilgi");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.DersAlmaVermeKismi.EgitmenDersVerme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AkademikDonemId")
                        .HasColumnType("int");

                    b.Property<int>("AkademikYilId")
                        .HasColumnType("int");

                    b.Property<int>("DersId")
                        .HasColumnType("int");

                    b.Property<int>("DerslikId")
                        .HasColumnType("int");

                    b.Property<int>("EgitmenId")
                        .HasColumnType("int");

                    b.Property<float>("GecmeNotu")
                        .HasColumnType("real");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("GunlukIslemSaatiId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("KisimId")
                        .HasColumnType("int");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AkademikDonemId");

                    b.HasIndex("AkademikYilId");

                    b.HasIndex("DersId");

                    b.HasIndex("DerslikId");

                    b.HasIndex("EgitmenId");

                    b.HasIndex("GunlukIslemSaatiId");

                    b.HasIndex("KisimId");

                    b.ToTable("EgitmenDersVerme");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.DersAlmaVermeKismi.HarfNotu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("AltNot")
                        .HasColumnType("real");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<float>("KrediKarsiligi")
                        .HasColumnType("real");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<float>("UstNot")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("HarfNotu");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.DersAlmaVermeKismi.NotHesapYuzdesi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("FinalYüzde")
                        .HasColumnType("real");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<float>("VizeYuzde")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("NotHesapYuzdesi");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.DersAlmaVermeKismi.OgrenciDersAlma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AkademikDonemId")
                        .HasColumnType("int");

                    b.Property<int>("AkademikYilId")
                        .HasColumnType("int");

                    b.Property<bool>("Alttan")
                        .HasColumnType("bit");

                    b.Property<float>("Butunleme")
                        .HasColumnType("real");

                    b.Property<int>("DersId")
                        .HasColumnType("int");

                    b.Property<float>("Final")
                        .HasColumnType("real");

                    b.Property<bool>("GecmeDurumu")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HarfNotuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("KisimId")
                        .HasColumnType("int");

                    b.Property<bool>("Muafiyet")
                        .HasColumnType("bit");

                    b.Property<float>("Notu")
                        .HasColumnType("real");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("int");

                    b.Property<bool>("SartliGecmeDurumu")
                        .HasColumnType("bit");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<float>("Vize")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AkademikDonemId");

                    b.HasIndex("AkademikYilId");

                    b.HasIndex("DersId");

                    b.HasIndex("HarfNotuId");

                    b.HasIndex("KisimId");

                    b.HasIndex("OgrenciId");

                    b.ToTable("OgrenciDersAlma");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.DersKismi.Ders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("AKTS")
                        .HasColumnType("real");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AkademikDonemId")
                        .HasColumnType("int");

                    b.Property<int>("AkademikYilId")
                        .HasColumnType("int");

                    b.Property<int>("DersBransId")
                        .HasColumnType("int");

                    b.Property<int>("DersIcerikId")
                        .HasColumnType("int");

                    b.Property<string>("DersKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("HaftaSayisi")
                        .HasColumnType("int");

                    b.Property<float>("HaftalikTeorikSaat")
                        .HasColumnType("real");

                    b.Property<float>("HaftalikUygulamaliSaat")
                        .HasColumnType("real");

                    b.Property<float>("Katsayi")
                        .HasColumnType("real");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<float>("Kredi")
                        .HasColumnType("real");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("SinifId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AkademikDonemId");

                    b.HasIndex("AkademikYilId");

                    b.HasIndex("DersBransId");

                    b.HasIndex("DersIcerikId");

                    b.HasIndex("SinifId");

                    b.ToTable("Ders");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.DersKismi.DersBrans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DersBrans");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.DersKismi.DersIcerik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DersIcerik");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.DerslikKismi.Derslik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("Kapasite")
                        .HasColumnType("int");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Derslik");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.DerslikKismi.OzelDerslik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DersId")
                        .HasColumnType("int");

                    b.Property<int>("DerslikId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DersId");

                    b.HasIndex("DerslikId");

                    b.ToTable("OzelDerslik");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.GuvenlikKismi.Jeton", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PasifAlZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PasiflikDurumu")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SahisId")
                        .HasColumnType("int");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TokenTimeEnd")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SahisId");

                    b.ToTable("Jeton");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.GuvenlikKismi.JetonSure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("SureDakika")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("JetonSure");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.GuvenlikKismi.SahisKullaniciAdi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasifAlZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PasiflikDurumu")
                        .HasColumnType("bit");

                    b.Property<int>("SahisId")
                        .HasColumnType("int");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SahisId");

                    b.ToTable("SahisKullaniciAdi");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.GuvenlikKismi.SahisSifre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("SahisKullaniciAdiId")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SahisKullaniciAdiId");

                    b.ToTable("SahisSifre");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.HaftalikPlanKismi.GunlukIslemSaati", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaslangicDakika")
                        .HasColumnType("int");

                    b.Property<int>("BaslangicSaat")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("HaftadakiGun")
                        .HasColumnType("int");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("SaatAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("SinifId")
                        .HasColumnType("int");

                    b.Property<int>("SuresiDakika")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SinifId");

                    b.ToTable("GunlukIslemSaati");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.HaftalikPlanKismi.OgrenciDersHariciSaat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AkademikDonemId")
                        .HasColumnType("int");

                    b.Property<int>("AkademikYilId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("GunlukIslemSaatiId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AkademikDonemId");

                    b.HasIndex("AkademikYilId");

                    b.HasIndex("GunlukIslemSaatiId");

                    b.ToTable("OgrenciDersHariciSaat");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.OgrenciKismi.Ogrenci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("DisiplinPuani")
                        .HasColumnType("real");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("KitaKaynaklimi")
                        .HasColumnType("bit");

                    b.Property<bool>("MezuniyetDurumu")
                        .HasColumnType("bit");

                    b.Property<float>("MezuniyetPuani")
                        .HasColumnType("real");

                    b.Property<string>("OgrenciNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasifAlZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PasiflikDurumu")
                        .HasColumnType("bit");

                    b.Property<int>("SahisId")
                        .HasColumnType("int");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SahisId");

                    b.ToTable("Ogrenci");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.OkulKismi.Kisim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("Kapasite")
                        .HasColumnType("int");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("SinifId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SinifId");

                    b.ToTable("Kisim");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.OkulKismi.Okul", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("OkulDuzeyiId")
                        .HasColumnType("int");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OkulDuzeyiId");

                    b.ToTable("Okul");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.OkulKismi.OkulDuzeyi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OkulDuzeyi");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.OkulKismi.Sinif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("OkulId")
                        .HasColumnType("int");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("SinifCesitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OkulId");

                    b.HasIndex("SinifCesitId");

                    b.ToTable("Sinif");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.OkulKismi.SinifCesit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SinifCesit");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.PersonelKismi.PersonelCesit.Egitmen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PasifAlZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PasiflikDurumu")
                        .HasColumnType("bit");

                    b.Property<int>("SahisId")
                        .HasColumnType("int");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubeId")
                        .HasColumnType("int");

                    b.Property<int>("UnvanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SahisId");

                    b.HasIndex("SubeId");

                    b.HasIndex("UnvanId");

                    b.ToTable("Egitmen");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.PersonelKismi.PersonelCesit.Memur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DereceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PasifAlZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PasiflikDurumu")
                        .HasColumnType("bit");

                    b.Property<int>("SahisId")
                        .HasColumnType("int");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DereceId");

                    b.HasIndex("SahisId");

                    b.HasIndex("SubeId");

                    b.ToTable("Memur");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.PersonelKismi.PersonelCesit.Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PasifAlZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PasiflikDurumu")
                        .HasColumnType("bit");

                    b.Property<int>("RutbeId")
                        .HasColumnType("int");

                    b.Property<int>("SahisId")
                        .HasColumnType("int");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RutbeId");

                    b.HasIndex("SahisId");

                    b.HasIndex("SubeId");

                    b.ToTable("Personel");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.PersonelKismi.PersonelUnvan.Derece", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kisaltma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Derece");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.PersonelKismi.PersonelUnvan.Rutbe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kisaltma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rutbe");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.PersonelKismi.PersonelUnvan.Unvan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kisaltma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Unvan");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.SahisKismi.Sahis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pbik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sahis");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.SahisKismi.SahisBilgi.AcikAlinanPersonel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AcikAlAciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AcikAlDurum")
                        .HasColumnType("bit");

                    b.Property<string>("AcikAlZamani")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PasifAlZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PasiflikDurumu")
                        .HasColumnType("bit");

                    b.Property<int>("SahisId")
                        .HasColumnType("int");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SahisId");

                    b.ToTable("AcikAlinanPersonel");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.SahisKismi.SahisBilgi.AdresBilgisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PasifAlZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PasiflikDurumu")
                        .HasColumnType("bit");

                    b.Property<int>("SahisId")
                        .HasColumnType("int");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SahisId");

                    b.ToTable("AdresBilgisi");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.SahisKismi.SahisBilgi.EmailBilgisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EPosta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PasifAlZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PasiflikDurumu")
                        .HasColumnType("bit");

                    b.Property<int>("SahisId")
                        .HasColumnType("int");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SahisId");

                    b.ToTable("EmailBilgisi");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.SahisKismi.SahisBilgi.Sicil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PasifAlZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PasiflikDurumu")
                        .HasColumnType("bit");

                    b.Property<int>("SahisId")
                        .HasColumnType("int");

                    b.Property<string>("SicilNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SahisId");

                    b.ToTable("Sicil");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.SahisKismi.SahisBilgi.TelefonBilgisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CepTel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KayitZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PasifAlZamani")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PasiflikDurumu")
                        .HasColumnType("bit");

                    b.Property<int>("SahisId")
                        .HasColumnType("int");

                    b.Property<bool>("SilDurum")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SahisId");

                    b.ToTable("TelefonBilgisi");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikEgitim", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikEgitimTuru", "AkademikEgitimTuru")
                        .WithMany()
                        .HasForeignKey("AkademikEgitimTuruId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikHafta", "AkademikHafta")
                        .WithMany()
                        .HasForeignKey("AkademikHaftaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.OkulKismi.Sinif", "Sinif")
                        .WithMany()
                        .HasForeignKey("SinifId");

                    b.Navigation("AkademikEgitimTuru");

                    b.Navigation("AkademikHafta");

                    b.Navigation("Sinif");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikHafta", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikDonem", "AkademikDonem")
                        .WithMany()
                        .HasForeignKey("AkademikDonemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikYil", "AkademikYil")
                        .WithMany()
                        .HasForeignKey("AkademikYilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AkademikDonem");

                    b.Navigation("AkademikYil");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikHaftaOzelGunleri", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikHafta", "AkademikHafta")
                        .WithMany()
                        .HasForeignKey("AkademikHaftaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.AkademikKisim.OzelGunOlay", "OzelGunOlay")
                        .WithMany()
                        .HasForeignKey("OzelGunOlayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AkademikHafta");

                    b.Navigation("OzelGunOlay");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.BirimKismi.Sube", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.BirimKismi.Daire", "Daire")
                        .WithMany()
                        .HasForeignKey("DaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.BirimKismi.SubeBilgi", "SubeBilgi")
                        .WithMany()
                        .HasForeignKey("SubeBilgiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Daire");

                    b.Navigation("SubeBilgi");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.DersAlmaVermeKismi.EgitmenDersVerme", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikDonem", "AkademikDonem")
                        .WithMany()
                        .HasForeignKey("AkademikDonemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikYil", "AkademikYil")
                        .WithMany()
                        .HasForeignKey("AkademikYilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.DersKismi.Ders", "Ders")
                        .WithMany()
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.DerslikKismi.Derslik", "Derslik")
                        .WithMany()
                        .HasForeignKey("DerslikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.PersonelKismi.PersonelCesit.Egitmen", "Egitmen")
                        .WithMany()
                        .HasForeignKey("EgitmenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.HaftalikPlanKismi.GunlukIslemSaati", "GunlukIslemSaati")
                        .WithMany()
                        .HasForeignKey("GunlukIslemSaatiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.OkulKismi.Kisim", "Kisim")
                        .WithMany()
                        .HasForeignKey("KisimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AkademikDonem");

                    b.Navigation("AkademikYil");

                    b.Navigation("Ders");

                    b.Navigation("Derslik");

                    b.Navigation("Egitmen");

                    b.Navigation("GunlukIslemSaati");

                    b.Navigation("Kisim");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.DersAlmaVermeKismi.OgrenciDersAlma", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikDonem", "AkademikDonem")
                        .WithMany()
                        .HasForeignKey("AkademikDonemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikYil", "AkademikYil")
                        .WithMany()
                        .HasForeignKey("AkademikYilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.DersKismi.Ders", "Ders")
                        .WithMany()
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.DersAlmaVermeKismi.HarfNotu", "HarfNotu")
                        .WithMany()
                        .HasForeignKey("HarfNotuId");

                    b.HasOne("JSGABackend.Entity.Concrete.Other.OkulKismi.Kisim", "Kisim")
                        .WithMany()
                        .HasForeignKey("KisimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.OgrenciKismi.Ogrenci", "Ogrenci")
                        .WithMany()
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AkademikDonem");

                    b.Navigation("AkademikYil");

                    b.Navigation("Ders");

                    b.Navigation("HarfNotu");

                    b.Navigation("Kisim");

                    b.Navigation("Ogrenci");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.DersKismi.Ders", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikDonem", "AkademikDonem")
                        .WithMany()
                        .HasForeignKey("AkademikDonemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikYil", "AkademikYil")
                        .WithMany()
                        .HasForeignKey("AkademikYilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.DersKismi.DersBrans", "DersBrans")
                        .WithMany()
                        .HasForeignKey("DersBransId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.DersKismi.DersIcerik", "DersIcerik")
                        .WithMany()
                        .HasForeignKey("DersIcerikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.OkulKismi.Sinif", "Sinif")
                        .WithMany()
                        .HasForeignKey("SinifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AkademikDonem");

                    b.Navigation("AkademikYil");

                    b.Navigation("DersBrans");

                    b.Navigation("DersIcerik");

                    b.Navigation("Sinif");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.DerslikKismi.OzelDerslik", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.DersKismi.Ders", "Ders")
                        .WithMany()
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.DerslikKismi.Derslik", "Derslik")
                        .WithMany()
                        .HasForeignKey("DerslikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ders");

                    b.Navigation("Derslik");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.GuvenlikKismi.Jeton", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.SahisKismi.Sahis", "Sahis")
                        .WithMany()
                        .HasForeignKey("SahisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sahis");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.GuvenlikKismi.SahisKullaniciAdi", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.SahisKismi.Sahis", "Sahis")
                        .WithMany()
                        .HasForeignKey("SahisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sahis");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.GuvenlikKismi.SahisSifre", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.GuvenlikKismi.SahisKullaniciAdi", "SahisKullaniciAdi")
                        .WithMany()
                        .HasForeignKey("SahisKullaniciAdiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SahisKullaniciAdi");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.HaftalikPlanKismi.GunlukIslemSaati", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.OkulKismi.Sinif", "Sinif")
                        .WithMany()
                        .HasForeignKey("SinifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sinif");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.HaftalikPlanKismi.OgrenciDersHariciSaat", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikDonem", "AkademikDonem")
                        .WithMany()
                        .HasForeignKey("AkademikDonemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.AkademikKisim.AkademikYil", "AkademikYil")
                        .WithMany()
                        .HasForeignKey("AkademikYilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.HaftalikPlanKismi.GunlukIslemSaati", "GunlukIslemSaati")
                        .WithMany()
                        .HasForeignKey("GunlukIslemSaatiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AkademikDonem");

                    b.Navigation("AkademikYil");

                    b.Navigation("GunlukIslemSaati");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.OgrenciKismi.Ogrenci", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.SahisKismi.Sahis", "Sahis")
                        .WithMany()
                        .HasForeignKey("SahisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sahis");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.OkulKismi.Kisim", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.OkulKismi.Sinif", "Sinif")
                        .WithMany()
                        .HasForeignKey("SinifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sinif");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.OkulKismi.Okul", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.OkulKismi.OkulDuzeyi", "OkulDuzeyi")
                        .WithMany()
                        .HasForeignKey("OkulDuzeyiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OkulDuzeyi");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.OkulKismi.Sinif", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.OkulKismi.Okul", "Okul")
                        .WithMany()
                        .HasForeignKey("OkulId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.OkulKismi.SinifCesit", "SinifCesit")
                        .WithMany()
                        .HasForeignKey("SinifCesitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Okul");

                    b.Navigation("SinifCesit");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.PersonelKismi.PersonelCesit.Egitmen", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.SahisKismi.Sahis", "Sahis")
                        .WithMany()
                        .HasForeignKey("SahisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.BirimKismi.Sube", "Sube")
                        .WithMany()
                        .HasForeignKey("SubeId");

                    b.HasOne("JSGABackend.Entity.Concrete.Other.PersonelKismi.PersonelUnvan.Unvan", "Unvan")
                        .WithMany()
                        .HasForeignKey("UnvanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sahis");

                    b.Navigation("Sube");

                    b.Navigation("Unvan");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.PersonelKismi.PersonelCesit.Memur", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.PersonelKismi.PersonelUnvan.Derece", "Derece")
                        .WithMany()
                        .HasForeignKey("DereceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.SahisKismi.Sahis", "Sahis")
                        .WithMany()
                        .HasForeignKey("SahisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.BirimKismi.Sube", "Sube")
                        .WithMany()
                        .HasForeignKey("SubeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Derece");

                    b.Navigation("Sahis");

                    b.Navigation("Sube");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.PersonelKismi.PersonelCesit.Personel", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.PersonelKismi.PersonelUnvan.Rutbe", "Rutbe")
                        .WithMany()
                        .HasForeignKey("RutbeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.SahisKismi.Sahis", "Sahis")
                        .WithMany()
                        .HasForeignKey("SahisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JSGABackend.Entity.Concrete.Other.BirimKismi.Sube", "Sube")
                        .WithMany()
                        .HasForeignKey("SubeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rutbe");

                    b.Navigation("Sahis");

                    b.Navigation("Sube");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.SahisKismi.SahisBilgi.AcikAlinanPersonel", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.SahisKismi.Sahis", "Sahis")
                        .WithMany()
                        .HasForeignKey("SahisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sahis");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.SahisKismi.SahisBilgi.AdresBilgisi", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.SahisKismi.Sahis", "Sahis")
                        .WithMany()
                        .HasForeignKey("SahisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sahis");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.SahisKismi.SahisBilgi.EmailBilgisi", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.SahisKismi.Sahis", "Sahis")
                        .WithMany()
                        .HasForeignKey("SahisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sahis");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.SahisKismi.SahisBilgi.Sicil", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.SahisKismi.Sahis", "Sahis")
                        .WithMany()
                        .HasForeignKey("SahisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sahis");
                });

            modelBuilder.Entity("JSGABackend.Entity.Concrete.Other.SahisKismi.SahisBilgi.TelefonBilgisi", b =>
                {
                    b.HasOne("JSGABackend.Entity.Concrete.Other.SahisKismi.Sahis", "Sahis")
                        .WithMany()
                        .HasForeignKey("SahisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sahis");
                });
#pragma warning restore 612, 618
        }
    }
}
